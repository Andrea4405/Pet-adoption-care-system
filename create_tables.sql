-- USERS: adopters, admins, staff
CREATE TABLE Users (
    user_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    full_name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    phone VARCHAR2(20),
    user_type VARCHAR2(20) CHECK (user_type IN ('adopter', 'admin', 'staff')),
    password_hash VARCHAR2(200),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- SPECIES: e.g., Dog, Cat
CREATE TABLE Species (
    species_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    species_name VARCHAR2(50) UNIQUE NOT NULL
);

-- BREEDS: belongs to a species
CREATE TABLE Breeds (
    breed_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    breed_name VARCHAR2(50) NOT NULL,
    species_id NUMBER,
    FOREIGN KEY (species_id) REFERENCES Species(species_id)
);

-- PETS: pets available for adoption
CREATE TABLE Pets (
    pet_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    age NUMBER,
    gender VARCHAR2(10) CHECK (gender IN ('Male', 'Female')),
    breed_id NUMBER,
    description VARCHAR2(500),
    is_adopted CHAR(1) DEFAULT 'N' CHECK (is_adopted IN ('Y', 'N')),
    image_url VARCHAR2(300),
    FOREIGN KEY (breed_id) REFERENCES Breeds(breed_id)
);

-- ADOPTIONS: adoption records
CREATE TABLE Adoptions (
    adoption_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    pet_id NUMBER NOT NULL,
    adoption_date DATE DEFAULT SYSDATE,
    status VARCHAR2(20) DEFAULT 'Pending' CHECK (status IN ('Pending', 'Approved', 'Rejected')),
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (pet_id) REFERENCES Pets(pet_id)
);

-- APPOINTMENTS: for visits, checkups, etc.
CREATE TABLE Appointments (
    appointment_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    user_id NUMBER,
    pet_id NUMBER,
    appointment_date TIMESTAMP NOT NULL,
    reason VARCHAR2(200),
    status VARCHAR2(20) DEFAULT 'Scheduled' CHECK (status IN ('Scheduled', 'Completed', 'Canceled')),
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (pet_id) REFERENCES Pets(pet_id)
);

-- PET CARE LOGS: daily health logs
CREATE TABLE PetCareLogs (
    care_log_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    pet_id NUMBER NOT NULL,
    log_date DATE DEFAULT SYSDATE,
    health_status VARCHAR2(200),
    notes VARCHAR2(500),
    FOREIGN KEY (pet_id) REFERENCES Pets(pet_id)
);
